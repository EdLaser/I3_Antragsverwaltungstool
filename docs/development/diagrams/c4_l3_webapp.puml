@startuml "Level 3 - Component"

skinparam actorStyle awesome

actor Antragssteller <<Person>>
actor Präsidium <<Person>>

node "Django-Applikation" as DjangoApplikation

node components {
    component login_controller <<Login>> [
        Ermöglicht es einem berechtigten Nutzer
         sich einzulogen, um in den internen
         Bereich zu gelangen.
    ]
    component view_antrags_anzeige <<Anzeige>> [
        Script, dass Datensätze nach festlegbaren
        Kriterien aus der Datenbank liest.
    ]
    component view_antrags_änderung <<Änderung>> [
        Script, dass nach Bearbeitung eines 
        Datensatzes Änderungen in die Datenank schreibt.
    ]
    component view_antrag_stellen <<Stellen>> [
        Script, dass Datensätze in die 
        Datenbank einfügt.
    ]
    component mysqlclient <<SQL-Treiber>> [
        Treiber zur Kommunikation mit der Datenbank.
    ]
}

database Datenbank <<container>>
 
Antragssteller ..> DjangoApplikation : nutzt (HTTP)
Präsidium ..> DjangoApplikation : nutzt (HTTP)

DjangoApplikation ..> login_controller : ruft
DjangoApplikation ..> mysqlclient : ruft
DjangoApplikation ..> view_antrags_anzeige : ruft
DjangoApplikation ..> view_antrags_änderung : ruft
DjangoApplikation ..> view_antrag_stellen : ruft

login_controller ..> mysqlclient : ruft
view_antrags_anzeige ..> mysqlclient : ruft
view_antrags_änderung ..> mysqlclient : ruft
view_antrag_stellen ..> mysqlclient : ruft

mysqlclient ..> Datenbank : CRUD (PyMySQL)

@enduml